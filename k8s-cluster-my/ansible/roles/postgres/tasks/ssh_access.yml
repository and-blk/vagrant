---
- name: Ssh access - create dir .ssh
  become_user: postgres
  file:
    path: ~/.ssh
    state: directory
    mode: '0700'

- name: Ssh access - get key from env
  set_fact:
    private_key: "{{ lookup('env', 'var_postgres_admin_private_ssh_key', default='') | b64decode }}"
  delegate_to: localhost

- name: Ssh access - get pub key from env
  set_fact:
    public_key: "{{ lookup('env', 'var_postgres_admin_public_ssh_key', default='') | b64decode }}"
  delegate_to: localhost

- name: Ssh access - assert that public key exists
  ansible.builtin.assert:
    that:
      - public_key != ""
    fail_msg: "public_key variable is not defined"

- name: Ssh access - assert that private key exists
  ansible.builtin.assert:
    that:
      - private_key != ""
    fail_msg: "private_key variable is not defined"

- name: Ssh access - create authorized keys
  become_user: postgres
  copy:
    dest: "~/.ssh/authorized_keys"
    content: "{{ public_key }}"
    mode: '0600'

- name: Ssh access - create id_rsa
  become_user: postgres
  copy:
    dest: "~/.ssh/id_rsa"
    content: "{{ private_key }}"
    mode: '0600'

- name: Ssh access - create id_rsa.pub
  become_user: postgres
  copy:
    dest: "~/.ssh/id_rsa.pub"
    content: "{{ public_key }}"
    mode: '0644'
